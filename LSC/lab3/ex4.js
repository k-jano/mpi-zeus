const fetch = require("node-fetch")
const fs = require('fs');

const url = 'https://submit.plgrid.pl/api/jobs'
const headers = {
    'Content-Type' : 'application/json',
    'PROXY': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lFVGtGL1V6QU5CZ2txaGtpRzl3MEJBUXNGQURCeE1Rc3dDUVlEVlFRR0V3SlEKVERFUU1BNEdBMVVFQ2hNSFVFd3RSM0pwWkRFVE1CRUdBMVVFQ2hNS1ZYcDVkR3R2ZDI1cGF6RVFNQTRHQTFVRQpDaE1IVUV3dFIzSnBaREVYTUJVR0ExVUVBeE1PU21GcmRXSWdTbUZ1YjNkemEya3hFREFPQmdOVkJBTVRCM0JzCloycGhibTh3SGhjTk1qQXhNREk0TVRneU9UUXhXaGNOTWpBeE1ESTVNRFl5T1RReFdqQ0JoakVMTUFrR0ExVUUKQmhNQ1VFd3hFREFPQmdOVkJBb1RCMUJNTFVkeWFXUXhFekFSQmdOVkJBb1RDbFY2ZVhScmIzZHVhV3N4RURBTwpCZ05WQkFvVEIxQk1MVWR5YVdReEZ6QVZCZ05WQkFNVERrcGhhM1ZpSUVwaGJtOTNjMnRwTVJBd0RnWURWUVFECkV3ZHdiR2RxWVc1dk1STXdFUVlEVlFRREV3b3hNekV5T1RFMU1qZ3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeXA1MnpTMUN5SmdkamlWeEcvd2xoN3BlYlpPNGNjQmpnbnVOaGJQRHg0OQpmZk83cHo2NHNueExjUW9tZVp5aTFSVGcvQzY1cUJFQWJzQ0E4VDE2cnd4VXAzOVlHU1J5eHp4RG43RzJhWUhYCnJ4aC9DNmU4dlBXcGdyUEkyVmJ5ZmFsOFQ0QkJBOUFaek9UellPeHZtODg5cmxiczFxMCtsYW5HMUsyekZmY1IKK3A4K2JheEJJRWphSHhPL2lhaEFoYWtoYzZzMGM0RWlSVmJFcmp5YnhqNlJ1QzNsRFZIYm9aYkpBNWNWV2VuYwpicWVqSVp0dUp5dWpUS0dYVHVHajU5U3diV3dZUk8wcC9ZTk9rbnRxUUpDZ2dNS2ZuUVFBNzBTQjl4ajdmbmxyClJFUVVtYlZ6em5TRzkySFR5Q0pHTmswVEpWWWJ1NEhNOVpVSGR5UHk0UUlEQVFBQm96RXdMekFPQmdOVkhROEIKQWY4RUJBTUNCTEF3SFFZSUt3WUJCUVVIQVE0QkFmOEVEakFNTUFvR0NDc0dBUVVGQnhVQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUNkb2YvQ2hCa0svYkd5SXdMMkYxRXc3czBPN0djK0NTUEorencvTkgzN3VSYlJRV2VGCm1iTGU4QlhiYzlxME5PWXNDclU5MGEzRXUzbnpCY09EQm5RT0hOM0Z0dm1BcFFqc0psN2JyNXBwQmZRdmxvSEgKNDI3RGJ3M1p4a2wrL2g1TGhucnZwalRUU3pFQTdTcXRoWnRsWWlSSTl2WnRmRGV4MGlVTjNQa3Zobi9IT1hUcApscEcxRk9yam1PTmF5RlM5MnBTNHY0dVEyejZUUDQ0ZWJWckRUQTB0cGsrUVlwa3VRSmdRRldpQVdHZ25heGxQCmFLS3lXTStmd2t3S2Nvb1RnQ1BmUWMyL0YyVjdTUXk2T08xZDVzVk1EOG9HQzVhVmxqSGszMUd5aFZCZkVRT0EKRWgzNVhJSExOcmxNOFlZSVBPQkdreHZXOGx0ZHFMZXUwUUc2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXlwNTJ6UzFDeUpnZGppVnhHL3dsaDdwZWJaTzRjY0JqZ251TmhiUER4NDlmZk83CnB6NjRzbnhMY1FvbWVaeWkxUlRnL0M2NXFCRUFic0NBOFQxNnJ3eFVwMzlZR1NSeXh6eERuN0cyYVlIWHJ4aC8KQzZlOHZQV3BnclBJMlZieWZhbDhUNEJCQTlBWnpPVHpZT3h2bTg4OXJsYnMxcTArbGFuRzFLMnpGZmNSK3A4KwpiYXhCSUVqYUh4Ty9pYWhBaGFraGM2czBjNEVpUlZiRXJqeWJ4ajZSdUMzbERWSGJvWmJKQTVjVldlbmNicWVqCkladHVKeXVqVEtHWFR1R2o1OVN3Yld3WVJPMHAvWU5Pa250cVFKQ2dnTUtmblFRQTcwU0I5eGo3Zm5sclJFUVUKbWJWenpuU0c5MkhUeUNKR05rMFRKVllidTRITTlaVUhkeVB5NFFJREFRQUJBb0lCQURjcHBFWDZFWks2REg1dApOQTh2eUVpSlE5TmU1c01xd0p5SEpNYzN5SmxsdEltZ0FFMGhFS010SFo4YmwxVEFIMVl1dVdkc281YS9pL1VsCmd5aThHSXJMbllpeHFMSEpwbGdCV3dYZlh4dFhwaXdlNStyWXJ5SHl4aU9DVDJ1RDh2aCtvN3AzYWZ5Umw0OEsKQmttcFNUcmNxbE5DWG1lOVE1czJNUWNmeDhSKzZkVzAwdkxMVHg1M3dnUzRCSkdXTmd6SVk4eFBjUUdqMXFjdQpNWGtwWlRIeDQ5bTBuTnJjVmNUdzRONWpUNENuM2dET0RoNFBGb3ZwejZtd0REOWhOTkxaYjdQTExtazd2RjBTCmxzVzJPV2NnMWRodlE0WXVUSmFoT0FKejh3bnZOaUY2Z1dCT25UYmd6d2FZbkszTGlWWUVPVC9TdjNNOUd4YnMKL1NCRzJyRUNnWUVBMHM4ZWkxeUs4M25zWlUzMVJLUmF2d0lOM0V4R0ZwcHhpS1ZOSXdoVEIyQ2RHUVd4QVMrbgpvNUJud0pVWUdsZGxzL08zUkhHLzlvNW02enJxOWd2OFlwclF1d1IxcnZvckY5RWp5OWNKK01VU044R25xVm45Ck50bVdSUnMxbFNwUUlmenpuc0xvaDJEM2U5ZUpPR3E5enJ5OEtKc2dGcFNGNU1wVXFzUWc2VVVDZ1lFQXo5dk4KTW05cDFaTEpybjVERG9GeGlHa3FoRlNOdDRaRVNQTXY0MndvdjRTaVlneDBLQTBFbUZCVEM3QllZOFRYaWtZRgpBQWtXUWM0cTZjdEx4bkUzRVNINzZueU5DREJGMEtuaUEvVnoycG0xS0kxbHNzVEt6cUY3ZmpTTkhucWhEOFVZCk5jN1pka3RDYmVEaVFHZ1hwUDVId0xZRDJYZzc2WHBEME53NDV1MENnWUJOdHMwcjB4SG1jQ3dWckllZXBuaE4Kc2hRcUFuUlVJTnQ1NUhaclU4WklFZlhZSTZEOUx2UTkrQjVIZ0s5Q0JyWVhnT0V1K2tBcVJKVHNZdXY3aUsraQpLakNJd1R3aEpWaDlqendEQ1dORHNtTGs2eDlENzBqSno2ejJEUEhUNjZWZTRrRnRaYTBUTzB3QSs1UTZtQjhnCjk3TGx4VW92Q05IVFprT1FNSDF4Z1FLQmdCa1BHYnp6MjZHSThkR2NuVDc1Y2hPTkFqZ3o3V1hyeFAyNmU5S0MKTHFOd1BSZHZBdTMxSzlHbEZXMzZVNTJybElTeURsWkR3akFxeDllcHo3ZmIzRlN2Y1N5QzJZbmNMLzZKREp1SAprdkVPeU4xYnRxQUh3NStIcmxpM3d5K2lmeHBrbTVlWkdYUitmRUs4OHVucTRyYmNoUkFCb1pNdFFLUFVQcXJHCmNnRzlBb0dBRjB4RnNKZlptb1QvbG05aTJ5NGJtSnRIQXg5clRaSkMzUkxEVWFwWjVUa0V0ZEVXSFpzYllmRi8KM0dJOW4zWWdOR1dob3NWVEliNSs3Q2JlUXUyWEQ2cVpkRjgySEE1OWpRQ3VuTi9xQ1piZ3VaOExhV3U1U0p0VwpkZzVrSHFzRnM5OHRoTG5pK090M3JnQkczczV0ZjlXUkNSUFJFeVhwYmhta3BBUWpKeEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlFOGpDQ0F0cWdBd0lCQWdJSWZVeEd1NTdqNzM0d0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFTE1Ba0dBMVVFCkJoTUNVRXd4RURBT0JnTlZCQW9UQjFCTUxVZHlhV1F4RWpBUUJnTlZCQU1UQ1ZOcGJYQnNaU0JEUVRBZUZ3MHkKTURFd01EY3hNakUxTkRWYUZ3MHlNVEV3TURjeE1qRTFORFZhTUhFeEN6QUpCZ05WQkFZVEFsQk1NUkF3RGdZRApWUVFLRXdkUVRDMUhjbWxrTVJNd0VRWURWUVFLRXdwVmVubDBhMjkzYm1sck1SQXdEZ1lEVlFRS0V3ZFFUQzFICmNtbGtNUmN3RlFZRFZRUURFdzVLWVd0MVlpQktZVzV2ZDNOcmFURVFNQTRHQTFVRUF4TUhjR3huYW1GdWJ6Q0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLN0VjUFNGSmphVjZ3b0MrZEtvZVNhcApCb0I0UFZmcUl5WlgrSEVYRVFCeFp6Qkt0Yks1M1JDOVpib05XdXkrbVNUU2lmRWduWWkzMEpGM0FtVGNSQWtvCm5ZalUxU2JsTlhubGQvRHl1bkNZTFJWa0VDNFdhT2ZkbEdtZmFoTWN2aXNEeXFnT29rY3NkakROVk54RnEya2gKYWc3SkNMb0xneStPYjBGMEgzcUthakhsS3VLZnVmRmU5K3hFTGpscmNZbUFDV0RmTnBLZ3B4ZG1SUy9CU0tKRgo3SndxdnJXd0UySENYOHZ2V3dZYnFvMnZqZjJUKzZnU1FIeHhna0prS2FDZy9YUDhPZzNORnZ0OGZiSnlLeXhVCmh0OFBSUmJqMHdTbzJ6WU40UjBaMzFZYUdrNXo2dktZZFB1UWl2MmZFRUliQU1OSDEydCtkcDk4aVBjUHY3RUMKQXdFQUFhT0J5ekNCeURBZEJnTlZIUTRFRmdRVTNHNzhCN2REOS9jQjdIdGd1V3lCd1lTZHUvY3dEQVlEVlIwVApBUUgvQkFJd0FEQWFCZ05WSFNBRUV6QVJNQThHRFNzR0FRUUJncFl0QVFFQkFRSXdOd1lEVlIwZkJEQXdMakFzCm9DcWdLSVltYUhSMGNEb3ZMM0JzWjNKcFpDMXpZMkV1ZDJOemN5NTNjbTlqTG5Cc0wyTnliQzVrWlhJd0h3WUQKVlIwakJCZ3dGb0FVcVJOUldXdEVTMytjb2ZjNXpOZ0IvRlJWUUMwd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSApBd0l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUFiLzBybVl5VDU5QzI1CnFzcittNyszOWdIbElQcFBTZWFFbloraHNTeDdQd09vcjBCMzRnTnpoMjdFQUYrbStic1JRMmc5eEtqb2lMNDIKSW41OWJ1ZUpaM2pVck5EemVDU29QS1ZsZ3BJZ2tvaEFUZmYxZStoMFA5OWtVeXBmRHBSR21IWmdWWjlqb0RpLwo2bFhaTnFLUytHamlEbUpNc0t6SXhVdVJ4bE1mdTdRU1Vrc2RsbUZvV0t4Q1kvdnVTdjZPbXJPZ28zdmFXWE54Cnp4TG1sdkRsam5SSEdPYkhES1NGRW9rQXpxa3A4T29iRjh4cUlQdm5lTThyb09FMVNFUmhHdE5ES0RKTlBxYzUKVVBNRk5uaHUyZUxJNUFqayt3Y3JEOHRaQ2xoUzZHMStjSjE0aWVuOGtTUUdQUU1VN1VmcWhzK0VKZlhPbldZLwppL3FKMEdGZnBIKzc1cDhDS2Vab1B4alFCOWRJNGRScU9DNDd3bGJ0bEk5RUtLRmFTa3RIZ3pCQi9WTUtmU1JyClJKZ0pReDZjOTZIbFZITU9sSjdUaUhhSVZ4U3JRV2lhN0tycy9RakdNR1ZUVThxeW5MNXh6TkRaV3pDUk5iSG4KYXhCRkdpRCtkeDdabGpFM00rOHlQM093MGtpcVNnd2lMNDV2UUlTTlFUeGcyUFhtSEJDUDlzZHJwZjlxc211QwpqVWhjbEdVc01UMzlaVnh3K3hzK3lRdU8wRXBwZ21NL1YwTnFVQnk4RnZWY1hWMXEzeUUwbHMyNkd6eW1Bd0N5CnhUVzBkL0djRTZKQ2xpMDNHL2hRWHJtenBMQ1VPSTNPbW1yZW5qUHl4OFBBMTZ4VC8rbGlFc0d5UldaZlBaRDgKTDZtUi9JMVhYci9LNXVwNXdTZ1N0UlQ4amwyM2l3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo='
}

const data = {
    'host' : 'zeus.cyfronet.pl',
    'working_directory': '/people/plgjano/lsc/lab3',
    'script': "#!/bin/bash -l \nloadPovray(){ \nmodule add plgrid/apps/povray\n} \n \nloadPovray && ./script6.sh"
}

const plgridDataUrl = 'https://data.plgrid.pl/list/people/plgjano/lsc/lab3/pov001.png'

downloadFile = () => {
    fetch(plgridDataUrl, {
        headers: headers
    }).then(res => {
        const fileStream = fs.createWriteStream('./img.png');
        res.body.pipe(fileStream);
        res.body.on("error", () => console.log('Write err'));
        fileStream.on("finish", () => console.log('Download finished'));
    }).catch(err =>
        console.log(err)
    )
}

monitorJob = (job_id) => {
    fetch(`${url}/${job_id}`, {
        method: 'GET',
        headers: headers
    }).then(res => 
        res.json()
    ).then(data =>{
        console.log(data.status)
        data.status === 'FINISHED'|| data.status === 404 || data.status === 'ERROR' ? downloadFile(): setTimeout(() => monitorJob(job_id), 200);
    }).catch(err => {
        console.log(err)
    })
}

submitJob = () => {
    fetch(url, {
        method: 'POST',
        headers: headers,
        body: JSON.stringify(data)
    }).then(res => 
        res.json()
    ).then(data => {
        console.log(data)
        monitorJob(data.job_id)
    }).catch(err => {
        console.log(err)
    })
}

submitJob()
